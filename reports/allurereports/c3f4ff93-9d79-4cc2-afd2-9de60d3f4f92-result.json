{"name": "test_login_with_wrong_credentials", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <AppiumFrameWork.pages.LoginPage.LoginPage object at 0x7f6ea2c2be20>, text = 'admin@gmail.com'\nlocatorValue = 'com.code2lead.kwad:id/Et4', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.waitForElement(locatorValue, locatorType)\n\n../base/BasePage.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFrameWork.pages.LoginPage.LoginPage object at 0x7f6ea2c2be20>\nlocatorValue = 'com.code2lead.kwad:id/Et4', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType):\n        locatorType = locatorType.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 10, poll_frequency=1, ignored_exceptions=[\n            ElementNotVisibleException,\n            ElementNotSelectableException,\n            NoSuchElementException])\n    \n        if locatorType == \"id\":\n>           element = wait.until(lambda x: x.find_element_by_id(locatorValue))\n\n../base/BasePage.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e8ee945e-d94a-4f25-bba3-f5873e193ff3\")>\nmethod = <function BasePage.waitForElement.<locals>.<lambda> at 0x7f6ea2c36a60>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <AppiumFrameWork.tests.Login_test.LoginTest testMethod=test_login_with_wrong_credentials>\n\n    @pytest.mark.run(order=2)\n    def test_login_with_wrong_credentials(self):\n        self.bp.keyCodes(4)\n        self.lp.click_on_login_button()\n>       self.lp.enter_email()\n\nLogin_test.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../pages/LoginPage.py:24: in enter_email\n    self.sendText(\"admin@gmail.com\", self._enter_email, \"id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFrameWork.pages.LoginPage.LoginPage object at 0x7f6ea2c2be20>, text = 'admin@gmail.com'\nlocatorValue = 'com.code2lead.kwad:id/Et4', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.waitForElement(locatorValue, locatorType)\n            element.send_keys(text)\n            self.log.info(f\"Send text on element with LocatorType: '{locatorType}' and locatorValue: '{locatorValue}'\")\n        except:\n            self.log.info(f\"Unable to send text on element with LocatorType: '{locatorType}' and locatorValue: '{locatorValue}'\")\n            self.takeScreenShot(locatorType)\n>           assert False\nE           AssertionError\n\n../base/BasePage.py:71: AssertionError"}, "steps": [{"name": "Click on Login Button", "status": "passed", "start": 1623197692494, "stop": 1623197692494}], "attachments": [{"name": "id", "source": "e2a6acea-8551-4163-8468-7f4080a63f70-attachment.png", "type": "image/png"}, {"name": "log", "source": "ce639199-c8d6-4087-ba9c-4b02480d7c5d-attachment.txt", "type": "text/plain"}], "start": 1623197691318, "stop": 1623197703350, "uuid": "543aa5f1-c4f3-4ac5-a92b-be93367d29ed", "historyId": "f4bb70b15e1d719c8cb60b4c4b8061e0", "testCaseId": "6e03865dc0507d0f31c4c4d989f6e6a1", "fullName": "Login_test.LoginTest#test_login_with_wrong_credentials", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "Login_test"}, {"name": "subSuite", "value": "LoginTest"}, {"name": "host", "value": "vadim-asus"}, {"name": "thread", "value": "86808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Login_test"}]}