{"name": "test_enterDataForm", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <AppiumFrameWork.pages.ContactUsFormPage.ContactForm object at 0x7efdb53c5f70>, text = '+415 123 45 6789'\nlocatorValue = 'self._enterMobileNumber', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.waitForElement(locatorValue, locatorType)\n\n../base/BasePage.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFrameWork.pages.ContactUsFormPage.ContactForm object at 0x7efdb53c5f70>\nlocatorValue = 'self._enterMobileNumber', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType):\n        locatorType = locatorType.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 10, poll_frequency=1, ignored_exceptions=[\n            ElementNotVisibleException,\n            ElementNotSelectableException,\n            NoSuchElementException])\n    \n        if locatorType == \"id\":\n>           element = wait.until(lambda x: x.find_element_by_id(locatorValue))\n\n../base/BasePage.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6360a8f8-6b72-4123-8e25-30c000a76327\")>\nmethod = <function BasePage.waitForElement.<locals>.<lambda> at 0x7efdb5389700>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <AppiumFrameWork.tests.ContactUsForm_test.ContactFormTest testMethod=test_enterDataForm>\n\n    @pytest.mark.run(order=2)\n    def test_enterDataForm(self):\n        self.cf.enterName()\n        self.cf.enterEmail()\n        self.cf.enterAdress()\n>       self.cf.enterMobileNumber()\n\nContactUsForm_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../pages/ContactUsFormPage.py:42: in enterMobileNumber\n    self.sendText(\"+415 123 45 6789\", \"self._enterMobileNumber\", \"id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFrameWork.pages.ContactUsFormPage.ContactForm object at 0x7efdb53c5f70>, text = '+415 123 45 6789'\nlocatorValue = 'self._enterMobileNumber', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.waitForElement(locatorValue, locatorType)\n            element.send_keys(text)\n            self.log.info(f\"Send text on element with LocatorType: '{locatorType}' and locatorValue: '{locatorValue}'\")\n        except:\n            self.log.info(f\"Unable to send text on element with LocatorType: '{locatorType}' and locatorValue: '{locatorValue}'\")\n            self.takeScreenShot(locatorType)\n>           assert False\nE           AssertionError\n\n../base/BasePage.py:71: AssertionError"}, "steps": [{"name": "Entered Name", "status": "passed", "start": 1623184008983, "stop": 1623184008983}, {"name": "Entered Email", "status": "passed", "start": 1623184009538, "stop": 1623184009538}, {"name": "Entered Adress", "status": "passed", "start": 1623184010597, "stop": 1623184010597}], "attachments": [{"name": "id", "source": "6e8b0e06-ff6c-498b-b234-3c0628cf304e-attachment.png", "type": "image/png"}, {"name": "log", "source": "85cbe221-e3c1-47b5-8636-87790d5f1ae9-attachment.txt", "type": "text/plain"}], "start": 1623184008902, "stop": 1623184021321, "uuid": "f539976a-3bd7-4590-889d-58f6ba60d544", "historyId": "adca10c2a19600d3fbc47d7703e5f881", "testCaseId": "34061b5c0a144abdd27c8fad8035abd0", "fullName": "ContactUsForm_test.ContactFormTest#test_enterDataForm", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "ContactUsForm_test"}, {"name": "subSuite", "value": "ContactFormTest"}, {"name": "host", "value": "vadim-asus"}, {"name": "thread", "value": "57725-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ContactUsForm_test"}]}